(window.webpackJsonp=window.webpackJsonp||[]).push([[5],{62:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return o})),n.d(t,"metadata",(function(){return c})),n.d(t,"rightToc",(function(){return i})),n.d(t,"default",(function(){return b}));var a=n(2),l=n(6),r=(n(0),n(76)),o={id:"application-api",title:"Application API"},c={unversionedId:"application-api",id:"application-api",isDocsHomePage:!1,title:"Application API",description:"rollcake-spa exports named classes, functions and variables rather than a single default export. This means importing must happen in one of two ways:",source:"@site/docs\\application-api.md",slug:"/application-api",permalink:"/rollcake-spa.org/docs/application-api",editUrl:"https://github.com/rollcakejs/rollcake-spa.org/edit/master/website/docs/application-api.md",version:"current",sidebar:"someSidebar",previous:{title:"Examples with rollcake-spa",permalink:"/rollcake-spa.org/docs/examples"},next:{title:"Buckets API",permalink:"/rollcake-spa.org/docs/buckets-api"}},i=[{value:"createElement",id:"createelement",children:[]},{value:"Simple arguments",id:"simple-arguments",children:[]},{value:"createPage",id:"createpage",children:[]},{value:"Simple arguments",id:"simple-arguments-1",children:[]},{value:"RollCakeMFBroker",id:"rollcakemfbroker",children:[]},{value:"Simple arguments",id:"simple-arguments-2",children:[]},{value:"RollCakeRouter",id:"rollcakerouter",children:[]},{value:"Simple arguments",id:"simple-arguments-3",children:[]},{value:"RollCakeSpa",id:"rollcakespa",children:[]},{value:"Simple arguments",id:"simple-arguments-4",children:[]}],s={rightToc:i};function b(e){var t=e.components,n=Object(l.a)(e,["components"]);return Object(r.b)("wrapper",Object(a.a)({},s,n,{components:t,mdxType:"MDXLayout"}),Object(r.b)("p",null,"rollcake-spa exports named classes, functions and variables rather than a single default export. This means importing must happen in one of two ways:"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),"import { RollCakeSpa, RollCakeMFBroker, RollCakeRouter } from '@rollcakejs/rollcake-spa';\n// or\nimport * as rollCakeSpa from '@rollcakejs/rollcake-spa';\n")),Object(r.b)("h3",{id:"createelement"},"createElement"),Object(r.b)("p",null,Object(r.b)("inlineCode",{parentName:"p"},"createElement")," it's a method to perform the creation of the Element class which is responsible for append DOM nodes."),Object(r.b)("h3",{id:"simple-arguments"},"Simple arguments"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),"// components/ReactPage.js\nimport { createElement, CUSTOM_ELEMENT_TAG} from \u2018@rollcakejs/rollcake-spa\u2019;\n\nconst ReactMf = () => createElement({\n    tag: CUSTOM_ELEMENT_TAG.MICROFRONTEND,\n    attr: {\n        name: \u2018react-bucket\u2019\n    }\n});\n\nexport default ReactMf;\n")),Object(r.b)("h3",null,"arguments"),Object(r.b)("dl",{className:"args-list"},Object(r.b)("dt",null,"tag: string"),Object(r.b)("dd",null,"Contain the HTML tag that will be created in DOM."),Object(r.b)("dt",null,"attr: Object"),Object(r.b)("dd",null,"Contain in it attribute declaration what should be add as attribute with the DOM element being created, e.g.: name, class, style, id, and others."),Object(r.b)("dt",null,"props: Object"),Object(r.b)("dd",null,"Contain props that will be inserted  with the DOM element being created, e.g.: textContent, innerHTML, innerText, and eventListener."),Object(r.b)("dt",null,"children: Array of Elements"),Object(r.b)("dd",null,"A list of elements that will be render under the current element")),Object(r.b)("h3",null,"returns"),Object(r.b)("p",null,Object(r.b)("inlineCode",{parentName:"p"},"Object")),Object(r.b)("h3",{id:"createpage"},"createPage"),Object(r.b)("p",null,Object(r.b)("inlineCode",{parentName:"p"},"createPage")," it's a method to perform the creation of the Page class which is responsible for order the render and destruction of elements, and lifecycle functions."),Object(r.b)("h3",{id:"simple-arguments-1"},"Simple arguments"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),"// pages/ReactPage.js\nimport { createPage } from \u2018@rollcakejs/rollcake-spa\u2019;\nimport ReactMf from \u2018../components/ReactMf\u2019;\n\nconst ReactPage = () => createPage({\n    onInit: function() { console.log(\u2018initialized!\u2019) },\n    onDestroy: function() { console.log(\u2018destroyed!\u2019) },\n    onUpdate: function() { console.log(\u2018updated\u2019) },\n    content: function() {\n        return ReactMf();\n    }\n});\n\nexport default ReactPage;\n")),Object(r.b)("h3",null,"arguments"),Object(r.b)("dl",{className:"args-list"},Object(r.b)("dt",null,"onInit: () => void"),Object(r.b)("dd",null,"Function that will be executed when the page be initialized"),Object(r.b)("dt",null,"onDestroy: () => void"),Object(r.b)("dd",null,"Function that will be executed when the page be destroyed"),Object(r.b)("dt",null,"onUpdate: () => void"),Object(r.b)("dd",null,"Function that will be executed when the shared data base of the application be updated"),Object(r.b)("dt",null,"content: () => Object"),Object(r.b)("dd",null,"Elements that will be applied to the DOM after render method be executed")),Object(r.b)("h3",null,"returns"),Object(r.b)("p",null,Object(r.b)("inlineCode",{parentName:"p"},"Object")),Object(r.b)("h3",{id:"rollcakemfbroker"},"RollCakeMFBroker"),Object(r.b)("p",null,Object(r.b)("inlineCode",{parentName:"p"},"RollCakeMFBroker")," class register parcels and prepare a fully shareable communication and data storage environment between them and the application. This one, can be consider this module with the most value-added artifact of the project."),Object(r.b)("h3",{id:"simple-arguments-2"},"Simple arguments"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),"// mf-broker.config.js\nimport { RollCakeMFBroker } from \u2018@rollcakejs/rollcake-spa\u2019;\n\nconst buckets = [\n    {\n        name: \u2018react-bucket\u2019,\n        address: \u2018https://locahost:3000\u2019\n    }\n];\n\nexport default new RollCakeMFBroker(buckets);\n")),Object(r.b)("h3",null,"arguments"),Object(r.b)("dl",{className:"args-list"},Object(r.b)("dt",null,"Buckets: Array of Bucket"),Object(r.b)("dd",null,"List of buckets that should be register and intermidated by broker.")),Object(r.b)("h3",null,"returns"),Object(r.b)("p",null,Object(r.b)("inlineCode",{parentName:"p"},"Object")),Object(r.b)("h3",{id:"rollcakerouter"},"RollCakeRouter"),Object(r.b)("p",null,Object(r.b)("inlineCode",{parentName:"p"},"RollCakeRouter")," class will be responsible for making the declaration, identification and control of routes of the application."),Object(r.b)("h3",{id:"simple-arguments-3"},"Simple arguments"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),"// router.config.js\nimport { RollCakeRouter, NAVIGATION_MODE } from \u2018@rollcakejs/rollcake-spa\u2019;\nimport ReactPage from \u2018./components/ReactPage\u2019;\n\nconst routes = [\n    {\n        path: \u2018/react\u2019,\n        item: ReactPage\n    }\n];\n\nexport default new RollCakeRouter({\n    routes,\n    mode: NAVIGATION_MODE.HISTORY\n});\n")),Object(r.b)("h3",null,"arguments"),Object(r.b)("dl",{className:"args-list"},Object(r.b)("dt",null,"Routes: Array of Route"),Object(r.b)("dd",null,"List of pages and location that could be render."),Object(r.b)("dt",null,"Mode: string"),Object(r.b)("dd",null,"Preferred mode navigation of router.")),Object(r.b)("h3",null,"returns"),Object(r.b)("p",null,Object(r.b)("inlineCode",{parentName:"p"},"Object")),Object(r.b)("h3",{id:"rollcakespa"},"RollCakeSpa"),Object(r.b)("p",null,Object(r.b)("inlineCode",{parentName:"p"},"RollCakeSpa")," class will be responsible for the use and integration of all previous classes, along with the ability to render,\ndestroy, and update on-screen elements."),Object(r.b)("h3",{id:"simple-arguments-4"},"Simple arguments"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),"// index.js\nimport { RollCakeSpa } from \u2018@rollcakejs/rollcake-spa\u2019;\nimport Router from \u2018./router.config\u2019;\nimport MFBroker from \u2018./mf-broker.config\u2019;\n\nconst MFBroker = new RollCakeMFBroker([{\n        name: \u2018react-bucket\u2019,\n        address: \u2018https://localhost:3000\u2019\n}]);\n\nnew RollCakeSpa(MFBroker, Router, document.getElementById(\u2018root\u2019));\n")),Object(r.b)("h3",null,"arguments"),Object(r.b)("dl",{className:"args-list"},Object(r.b)("dt",null,"MFBroker: RollCakeMFBroker"),Object(r.b)("dd",null,"Instance of the class responsible for register and reference the parcels."),Object(r.b)("dt",null,"Router: RollCakeRouter"),Object(r.b)("dd",null,"Instance of the class responsible for control route preferences."),Object(r.b)("dt",null,"entryDOMNode: HTMLElement"),Object(r.b)("dd",null,"Reference of a DOM node that will receive the elements to be render."),Object(r.b)("dt",null,"loadingContent?: () => Element"),Object(r.b)("dd",null,"Function that will be trigger while the parcels are being fetched.")),Object(r.b)("h3",null,"returns"),Object(r.b)("p",null,Object(r.b)("inlineCode",{parentName:"p"},"Object")))}b.isMDXComponent=!0}}]);